/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.PHSlManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PHSenterprise;
import Business.Organization.Organization;
import Business.Organization.PHSorganization;
import Business.WorkQueue.BuyNewMedicalDeviceRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nirav gupta
 */
public class ManageBuyDeviceRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageBuyDeviceRequestsJPanel
     */
    JPanel userProcessContainer; Enterprise enterprise; Organization organization; EcoSystem system;
    
    public ManageBuyDeviceRequestsJPanel(JPanel userProcessContainer, Enterprise enterprise, Organization organization, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.enterprise=enterprise;
        this.organization=organization;
        this.system=system;
        populateDeviceBuyRequestsTable();
    }

    public void populateDeviceBuyRequestsTable(){
            DefaultTableModel model = (DefaultTableModel) requestjTable1.getModel();
            model.setRowCount(0);

                        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            if (org instanceof PHSorganization) {
                                for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
                                    if (request instanceof BuyNewMedicalDeviceRequest){
                                    Object[] row = new Object[6];
                                    row[0] = request;
                                    row[1] = request.getRequestDate();
                                    row[2] = ((BuyNewMedicalDeviceRequest) request).getRequiredMedicalDeviceType();
                                    row[3] = ((BuyNewMedicalDeviceRequest) request).getLocationRequired();
                                    row[4] = ((PHSenterprise) enterprise).getAvailableFunds();
                                    row[5] = request.getStatus();
                                    model.addRow(row);
                                    }
                                }
                            }
                        }
                        
                        

        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        buyMedicalDevicejButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestjTable1 = new javax.swing.JTable();
        rejectjButton1 = new javax.swing.JButton();
        backjButton4 = new javax.swing.JButton();
        resolveRequestjButton2 = new javax.swing.JButton();
        refreshjButton1 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("MANAGE BUY DEVICE REQUESTS");

        buyMedicalDevicejButton2.setBackground(new java.awt.Color(0, 204, 102));
        buyMedicalDevicejButton2.setText("Buy Medical Device");
        buyMedicalDevicejButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyMedicalDevicejButton2ActionPerformed(evt);
            }
        });

        requestjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Date", "Device Type  Required", "Location Required", "Aval Funds", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestjTable1);

        rejectjButton1.setBackground(new java.awt.Color(255, 204, 204));
        rejectjButton1.setText("Reject Request");
        rejectjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectjButton1ActionPerformed(evt);
            }
        });

        backjButton4.setText("<<Back");
        backjButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton4ActionPerformed(evt);
            }
        });

        resolveRequestjButton2.setBackground(new java.awt.Color(0, 204, 102));
        resolveRequestjButton2.setText("Resolve Request");
        resolveRequestjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resolveRequestjButton2ActionPerformed(evt);
            }
        });

        refreshjButton1.setText("Refresh");
        refreshjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(buyMedicalDevicejButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(backjButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rejectjButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addComponent(resolveRequestjButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(83, 83, 83))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshjButton1)
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(refreshjButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyMedicalDevicejButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rejectjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backjButton4)
                    .addComponent(resolveRequestjButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buyMedicalDevicejButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyMedicalDevicejButton2ActionPerformed
        BuyMedicalDeviceJPanel manageNetworkJPanel = new BuyMedicalDeviceJPanel(userProcessContainer,enterprise,organization, system);
        userProcessContainer.add("manageNetworkJPanel", manageNetworkJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_buyMedicalDevicejButton2ActionPerformed

    private void backjButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton4ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton4ActionPerformed

    private void resolveRequestjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resolveRequestjButton2ActionPerformed
        int selectedRequest = requestjTable1.getSelectedRow();
        
        if (selectedRequest < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a request from request table");
            return;
        }
        
        WorkRequest request = (WorkRequest)requestjTable1.getValueAt(selectedRequest, 0);
        
        if (request.getStatus().equalsIgnoreCase("Resolved")){
            JOptionPane.showMessageDialog(null, "ERROR: Request already resolved !! ");
            return;
        }
        
        int reply = JOptionPane.showConfirmDialog(null,"ARE YOU SURE TO RESOLVE DEVICE BUY REQUEST ??", "RESOLVE REQUEST", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION){
                request.setStatus("Resolved");
                request.setMessage("Device Bought");
                rejectjButton1.setEnabled(false);
            }else{
                return;
            }
            
            populateDeviceBuyRequestsTable();
    }//GEN-LAST:event_resolveRequestjButton2ActionPerformed

    private void rejectjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectjButton1ActionPerformed
        int selectedRequest = requestjTable1.getSelectedRow();
        
        if (selectedRequest < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a request from request table");
            return;
        }
        
        WorkRequest request = (WorkRequest)requestjTable1.getValueAt(selectedRequest, 0);
        
        if (request.getStatus().equalsIgnoreCase("Rejected")){
            JOptionPane.showMessageDialog(null, "ERROR: Request already rejected !! ");
            return;
        }
        
        int reply = JOptionPane.showConfirmDialog(null,"Are you sure you want to reject request??", "REJECT REQUEST", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION){
                request.setStatus("Rejected");
                request.setMessage("Cannot Approve");
                resolveRequestjButton2.setEnabled(false);
            }else{
                return;
            }
       populateDeviceBuyRequestsTable();
    }//GEN-LAST:event_rejectjButton1ActionPerformed

    private void refreshjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButton1ActionPerformed
       populateDeviceBuyRequestsTable();
    }//GEN-LAST:event_refreshjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton4;
    private javax.swing.JButton buyMedicalDevicejButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshjButton1;
    private javax.swing.JButton rejectjButton1;
    private javax.swing.JTable requestjTable1;
    private javax.swing.JButton resolveRequestjButton2;
    // End of variables declaration//GEN-END:variables
}
