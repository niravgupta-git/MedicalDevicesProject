/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.PHSlManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CareTeamOrganization;
import Business.Organization.HospitalAdminOrganization;
import Business.Organization.Organization;
import Business.Organization.PHSorganization;
import Business.Organization.SupplierOrganization;
import Business.Supplier.MedicalDevice;
import Business.Supplier.Supplier;
import Business.WorkQueue.SupplierEnrollmentRequest;
import Business.WorkQueue.SurgeryOperationWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nirav gupta
 */
public class ManageSupplierApprovalsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSupplierApprovalsJPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise; 
    Organization organization; 
    EcoSystem system;
    //Supplier supplier;
    
    public ManageSupplierApprovalsJPanel(JPanel userProcessContainer, Enterprise enterprise, Organization organization, EcoSystem system) {
        initComponents();
    this.userProcessContainer=userProcessContainer;
    this.enterprise=enterprise;
    this.organization=organization;
    this.system=system;
    populateSupplierRequestsTable();
    
    
    
    }

    public void populateSupplierRequestsTable(){
            DefaultTableModel model = (DefaultTableModel) supplierjTable1.getModel();
            model.setRowCount(0);

                        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            if (org instanceof PHSorganization) {
                                for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
                                    Object[] row = new Object[4];
                                    row[0] = request;
                                    row[1] = request.getRequestDate();
                                    row[2] = request.getSender();
                                    row[3] = request.getStatus();  
                                    model.addRow(row);
                                }
                            }
                        }
                        
                        

        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierjTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        productCatalogJTable = new javax.swing.JTable();
        viewDevicesjButton1 = new javax.swing.JButton();
        approveSupplierjButton2 = new javax.swing.JButton();
        disapproveSupplierjButton1 = new javax.swing.JButton();
        backjButton4 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("MANAGE SUPPLIER APPROVALS ");

        supplierjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Create Date", "Supplier Name", "Enrollment Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(supplierjTable1);
        if (supplierjTable1.getColumnModel().getColumnCount() > 0) {
            supplierjTable1.getColumnModel().getColumn(0).setResizable(false);
            supplierjTable1.getColumnModel().getColumn(1).setResizable(false);
            supplierjTable1.getColumnModel().getColumn(2).setResizable(false);
            supplierjTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        productCatalogJTable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        productCatalogJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Device Name", "Device Type", "Price", "Stock Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(productCatalogJTable);

        viewDevicesjButton1.setBackground(new java.awt.Color(0, 204, 204));
        viewDevicesjButton1.setText("View Supplier's Devices");
        viewDevicesjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDevicesjButton1ActionPerformed(evt);
            }
        });

        approveSupplierjButton2.setBackground(new java.awt.Color(0, 153, 102));
        approveSupplierjButton2.setText("Approve Supplier");
        approveSupplierjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveSupplierjButton2ActionPerformed(evt);
            }
        });

        disapproveSupplierjButton1.setBackground(new java.awt.Color(0, 153, 102));
        disapproveSupplierjButton1.setText("Dis-approve Supplier");
        disapproveSupplierjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disapproveSupplierjButton1ActionPerformed(evt);
            }
        });

        backjButton4.setText("<<Back");
        backjButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(viewDevicesjButton1)
                        .addGap(26, 26, 26)
                        .addComponent(approveSupplierjButton2)
                        .addGap(18, 18, 18)
                        .addComponent(disapproveSupplierjButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backjButton4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDevicesjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(approveSupplierjButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(disapproveSupplierjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backjButton4)
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewDevicesjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDevicesjButton1ActionPerformed
        
        int selectedRequest = supplierjTable1.getSelectedRow();

        if (selectedRequest < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row from Supplier table");
            return;
        }
        
        WorkRequest request = (WorkRequest)supplierjTable1.getValueAt(selectedRequest, 0);
        
        for (Network n : system.getNetworkList()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                if (e.getEnterpriseType().getValue().equalsIgnoreCase("Supplier")) {
                    for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                        if (o.getName().equalsIgnoreCase("Supplier Organization")) {
                            SupplierOrganization suppOrg = (SupplierOrganization) o;
                            for (Supplier supp : suppOrg.getSupplierDirectory().getSupplierDict()) {
                                if (supp.getUsername().equalsIgnoreCase(request.getSender().getUsername())) {
                                    //supplier = supp;

                                    DefaultTableModel model = (DefaultTableModel) productCatalogJTable.getModel();
                                    model.setRowCount(0);

                                    for (MedicalDevice md : supp.getProductCatalog().getProductCatalog()) {
                                        Object row[] = new Object[4];
                                        row[0] = md;
                                        row[1] = md.getPurchaseCost();
                                        row[2] = md.getDeviceType();
                                        row[3] = md.getAvailability();
                                        model.addRow(row);
                                    }

                                }
                            }
                        }
                    }
                }
            }
        }
        
    }//GEN-LAST:event_viewDevicesjButton1ActionPerformed

    private void approveSupplierjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveSupplierjButton2ActionPerformed
        int selectedRequest = supplierjTable1.getSelectedRow();

        if (selectedRequest < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row from Supplier table");
            return;
        }
        
        WorkRequest request = (WorkRequest)supplierjTable1.getValueAt(selectedRequest, 0);
        
        if (request.getStatus().equalsIgnoreCase(Supplier.enrollmentStatusType.ENROLLED.getValue())){
            JOptionPane.showMessageDialog(null, "ERROR: Request already completed and enrolled!!");
            return;
        }
        
        if (request.getStatus().equalsIgnoreCase(Supplier.enrollmentStatusType.DISAPPROVED.getValue())){
            JOptionPane.showMessageDialog(null, "ERROR: Request already dis-approved!!");
            return;
        }
        
        request.setStatus(Supplier.enrollmentStatusType.ENROLLED.getValue());

        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise3 : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise3.getEnterpriseType().getValue().equalsIgnoreCase("Supplier")) {
                    for (Organization o : enterprise3.getOrganizationDirectory().getOrganizationList()) {
                        if (o.getName().equalsIgnoreCase("Supplier Organization")) {
                            SupplierOrganization suppOrg = (SupplierOrganization) o;
                            for (Supplier s : suppOrg.getSupplierDirectory().getSupplierDict()) {
                                if (s.getSupplyName().equalsIgnoreCase(((SupplierEnrollmentRequest)request).getSupplier().getSupplyName())){
                                s.setEnrollmentStatus(Supplier.enrollmentStatusType.ENROLLED.getValue());
                               }
                            }
                        }
                    }
                }
            }
        }
        
        JOptionPane.showMessageDialog(null, "Supplier enrolled");
        populateSupplierRequestsTable();
    }//GEN-LAST:event_approveSupplierjButton2ActionPerformed

    private void disapproveSupplierjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disapproveSupplierjButton1ActionPerformed
        int selectedRequest = supplierjTable1.getSelectedRow();

        if (selectedRequest < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row from Supplier table");
            return;
        }
        
        WorkRequest request = (WorkRequest)supplierjTable1.getValueAt(selectedRequest, 0);
        
        if (request.getStatus().equalsIgnoreCase(Supplier.enrollmentStatusType.ENROLLED.getValue())){
            JOptionPane.showMessageDialog(null, "ERROR: Request already completed and enrolled!!");
            return;
        }
        
        if (request.getStatus().equalsIgnoreCase(Supplier.enrollmentStatusType.DISAPPROVED.getValue())){
            JOptionPane.showMessageDialog(null, "ERROR: Request already dis-approved!!");
            return;
        }
        
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise3 : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise3.getEnterpriseType().getValue().equalsIgnoreCase("Supplier")) {
                    for (Organization o : enterprise3.getOrganizationDirectory().getOrganizationList()) {
                        if (o.getName().equalsIgnoreCase("Supplier Organization")) {
                            SupplierOrganization suppOrg = (SupplierOrganization) o;
                            for (Supplier s : suppOrg.getSupplierDirectory().getSupplierDict()) {
                                if (s.getSupplyName().equalsIgnoreCase(((SupplierEnrollmentRequest)request).getSupplier().getSupplyName())){
                                s.setEnrollmentStatus(Supplier.enrollmentStatusType.DISAPPROVED.getValue());
                               }
                            }
                        }
                    }
                }
            }
        }
        
        request.setStatus(Supplier.enrollmentStatusType.DISAPPROVED.getValue());
        
        JOptionPane.showMessageDialog(null, "Supplier dis approved");
        populateSupplierRequestsTable();
    }//GEN-LAST:event_disapproveSupplierjButton1ActionPerformed

    private void backjButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton4ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveSupplierjButton2;
    private javax.swing.JButton backjButton4;
    private javax.swing.JButton disapproveSupplierjButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable productCatalogJTable;
    private javax.swing.JTable supplierjTable1;
    private javax.swing.JButton viewDevicesjButton1;
    // End of variables declaration//GEN-END:variables
}
