/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.CareTeamOrganization;
import Business.Organization.DoctorOrganization;
import Business.Organization.OperatingRoomOrganization;
import Business.Organization.Organization;
import Business.Supplier.MedicalDevice;
import Business.Supplier.MedicalDevice.deviceType;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SurgeryOperationWorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author nirav gupta
 */
public class CreateSurgeryOperationRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateSurgeryOperationRequestJPanel
     */
    JPanel userProcessContainer;
    UserAccount account; 
    EcoSystem system;
    Enterprise enterprise;
    Organization organization;
    
    public CreateSurgeryOperationRequestJPanel(JPanel userProcessContainer, Enterprise enterprise, Organization organization, UserAccount account, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.system=system;
        this.enterprise=enterprise;
        this.organization=organization;
        populateTypeComboBox();
    }

    public void populateTypeComboBox() {
        deviceTypejComboBox1.removeAllItems();
       for(deviceType type : MedicalDevice.deviceType.values()) {
           deviceTypejComboBox1.addItem(type);
       }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        careTeamSizejTextField2 = new javax.swing.JTextField();
        operationDatejDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        createRequestjButton1 = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        messagejTextField1 = new javax.swing.JTextField();
        deviceTypejComboBox1 = new javax.swing.JComboBox();

        jLabel2.setText("Required Device type:");

        jLabel4.setText("Operation Date:");

        jLabel3.setText("Required Care Team Size:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("CREATE SURGERY OPERATION REQUEST");

        createRequestjButton1.setText("CREATE REQUEST");
        createRequestjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRequestjButton1ActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Operation Type/ Message:");

        deviceTypejComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(careTeamSizejTextField2)
                            .addComponent(operationDatejDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                            .addComponent(messagejTextField1)
                            .addComponent(deviceTypejComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createRequestjButton1)))
                .addGap(92, 92, 92))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(operationDatejDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(deviceTypejComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(careTeamSizejTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(messagejTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(createRequestjButton1))
                .addContainerGap(187, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void createRequestjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRequestjButton1ActionPerformed
        
        Date date = new Date();
        if (operationDatejDateChooser1.getDate().before(date)){
            JOptionPane.showMessageDialog(null, "Operation date has to ahead of Current Date");
            return;
        }
        
        if(careTeamSizejTextField2.getText().isEmpty()==true || careTeamSizejTextField2.getText().startsWith(" ")) {
            JOptionPane.showMessageDialog(null, "Please enter valid value in care team size field");
            return;
        }
        
        if(messagejTextField1.getText().isEmpty()==true || messagejTextField1.getText().startsWith(" ")) {
            JOptionPane.showMessageDialog(null, "Please enter valid text in message field");
            return;
        }
        
         try {
            int size = Integer.parseInt(careTeamSizejTextField2.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null,
                "Error: Please enter integer values in care team size field");
            return;
        }
        
        deviceType type = (deviceType) deviceTypejComboBox1.getSelectedItem();
        
        SurgeryOperationWorkRequest srgryWrkReq = new SurgeryOperationWorkRequest();
        
        srgryWrkReq.setMessage(messagejTextField1.getText());
        srgryWrkReq.setOperationDate(operationDatejDateChooser1.getDate());
        srgryWrkReq.setRequiredCareTeamSize(Integer.valueOf(careTeamSizejTextField2.getText()));
        srgryWrkReq.setRequiredMedicalDeviceType(type.getValue());
        
        srgryWrkReq.setSender(account);
        srgryWrkReq.setStatus(SurgeryOperationWorkRequest.requestStatusType.PENDING.getValue());
        
        
        srgryWrkReq.setRequestDate(date);
        
                    for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (org instanceof CareTeamOrganization || org instanceof DoctorOrganization || org instanceof OperatingRoomOrganization){
                            org.getWorkQueue().getWorkRequestList().add(srgryWrkReq);
                            account.getWorkQueue().getWorkRequestList().add(srgryWrkReq);
                            
                        }
                    }
                    
                    JOptionPane.showMessageDialog(null,"Operation Request Created");
                    

    }//GEN-LAST:event_createRequestjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField careTeamSizejTextField2;
    private javax.swing.JButton createRequestjButton1;
    private javax.swing.JComboBox deviceTypejComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField messagejTextField1;
    private com.toedter.calendar.JDateChooser operationDatejDateChooser1;
    // End of variables declaration//GEN-END:variables
}
